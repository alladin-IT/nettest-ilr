/*******************************************************************************
 * Copyright 2016-2017 alladin-IT GmbH
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/

package at.alladin.nettest.shared.model;

import com.google.gson.annotations.Expose;
import com.google.gson.annotations.SerializedName;
/**
 * POJO for OpenTestResource 
 * @author fk
 *
 */
public class MeasurementOpenTest extends Measurement {

	/**
	 * 
	 */
	private static final long serialVersionUID = -4030406701406034303L;
	
	/**
	 * The latitude coordinate of the measurement
	 * TODO: Verify this is NOT the same thing as MeasurementService.realLocation
	 * TODO: took the serialized names from the OpenTestResource, change?
	 */
	@SerializedName("lat")
	@Expose
	private Double latitude;

	/**
	 * The longitude coordinate of the measurement
	 * TODO: Verify this is NOT the same thing as MeasurementService.realLocation
	 */
	@SerializedName("long")
	@Expose
	private Double longitude;
	
	/**
	 * Defines where the location measurement comes from (e.g. GPS)
	 */
	@SerializedName("loc_src")
	@Expose
	private String locSrc;
	
	@SerializedName("download_kbit")
	@Expose
	private Long downloadKbit;
	
	@SerializedName("upload_kbit")
	@Expose
	private Long uploadKbit;

	/**
	 * (internal) Android-only, country code derived by client from mobile network code
	 * TODO: verify "(internal)" (it shows up on the alladin.nettest)
	 */
	@SerializedName("network_country")
	@Expose
	private String networkCountry;
	
	/**
	 * Name of current mobile network as displayed on device (eg: '3likeHome')
	 */
	@SerializedName("network_name")
	@Expose
	private String networkName;
	
	/**
	 * 
	 */
	@SerializedName("provider_name")
	@Expose
	private String providerName;
	
	/**
	 * translation-mechanism in NAT, eg. nat_local_to_public_ipv4
	 */
	@SerializedName("connection")
	@Expose
	private String connection;
	
	public Double getLatitude() {
		return latitude;
	}

	public void setLatitude(Double latitude) {
		this.latitude = latitude;
	}

	public Double getLongitude() {
		return longitude;
	}

	public void setLongitude(Double longitude) {
		this.longitude = longitude;
	}

	public String getLocSrc() {
		return locSrc;
	}

	public void setLocSrc(String locSrc) {
		this.locSrc = locSrc;
	}

	public Long getDownloadKbit() {
		// TODO: this.getSpeedtest().getSpeedDownload();
		return downloadKbit;
	}

	public void setDownloadKbit(Long downloadKbit) {
		this.downloadKbit = downloadKbit;
	}

	public Long getUploadKbit() {
		return uploadKbit;
	}

	public void setUploadKbit(Long uploadKbit) {
		this.uploadKbit = uploadKbit;
	}

	public String getNetworkCountry() {
		return networkCountry;
	}

	public void setNetworkCountry(String networkCountry) {
		this.networkCountry = networkCountry;
	}

	public String getNetworkName() {
		return networkName;
	}

	public void setNetworkName(String networkName) {
		this.networkName = networkName;
	}

	public String getProviderName() {
		return providerName;
	}

	public void setProviderName(String providerName) {
		this.providerName = providerName;
	}

	public String getConnection() {
		return connection;
	}

	public void setConnection(String connection) {
		this.connection = connection;
	}
	
	
}
